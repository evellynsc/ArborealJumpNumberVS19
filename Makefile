SYSTEM     = x86-64_linux
LIBFORMAT  = static_pic
CPLEXDIR      = /home/lapo/cplex/cplex201
CONCERTDIR    = /home/lapo/cplex/cplex201/concert
BOOSTLIBDIR = /home/lapo/evellyn/boost_1_79_0
CPLEXLIBDIR   = $(CPLEXDIR)/cplex/lib/$(SYSTEM)/$(LIBFORMAT)
CONCERTLIBDIR = $(CONCERTDIR)/lib/$(SYSTEM)/$(LIBFORMAT)
CLNFLAGS  = -L$(CPLEXLIBDIR) -L$(CONCERTLIBDIR) -L$(BOOSTLIBDIR)  -lilocplex -lconcert -lcplex -m64 -lm -lpthread


COPT  = -m64 -O2 -fPIC -fexceptions -DNDEBUG -DIL_STD -DLONG_MAX=0x7FFFFFFFL
GENERALINCDIR   = -I ArborealJumpNumber
CPLEXINCDIR   = -I $(CPLEXDIR)/cplex/include -I $(CPLEXDIR)/concert/include
CFLAGS = $(COPT) $(GENERALINCDIR) 
CFLAGS2  = $(COPT) $(CPLEXINCDIR)

CC=g++ -std=c++17 -w
CC_VALGRIND=g++ -std=c++17 -g -O0

PROG_DIR=ArborealJumpNumber
PROG_BIN=bin

MAIN_SRC=$(PROG_DIR)/ArborealJumpNumber.cpp



FLOW_SRC=$(PROG_DIR)/algorithms/flow.cpp
FLOW_H=$(PROG_DIR)/algorithms/flow.h
FLOW_OBJ=$(PROG_BIN)/flow.o

ELEMENTARY_H=$(PROG_DIR)/base/elementary.h
ELEMENTARY_OBJ=$(PROG_BIN)/elementary.o

GRAPH_H=$(PROG_DIR)/base/graph.h
GRAPH_OBJ=$(PROG_BIN)/graph.o

INSTANCE_H=$(PROG_DIR)/base/instance.h
INSTANCE_OBJ=$(PROG_BIN)/instance.o

PROP_H	=$(PROG_DIR)/base/properties.h
PROP_OBJ=$(PROG_BIN)/properties.o

SOLUTION_SRC=$(PROG_DIR)/solution.cpp
SOLUTION_H=$(PROG_DIR)/solution.h
SOLUTION_OBJ=$(PROG_BIN)/solution.o

HEURISTIC_SRC	=$(PROG_DIR)/heuristic/minimal_extension.cpp
HEURISTIC_H		=$(PROG_DIR)/heuristic/minimal_extension.h
HEURISTIC_OBJ	=$(PROG_BIN)/heuristic/minimal_extension.o

INSTANCE_GENERATOR_SRC	=$(PROG_DIR)/preprocessing/instance_generator.cpp
INSTANCE_GENERATOR_H	=$(PROG_DIR)/preprocessing/instance_generator.h
INSTANCE_GENERATOR_OBJ	=$(PROG_BIN)/preprocessing/instance_generator.o

READER_SRC	=$(PROG_DIR)/preprocessing/reader.cpp
READER_H	=$(PROG_DIR)/preprocessing/reader.h
READER_OBJ	=$(PROG_BIN)/preprocessing/reader.o

PROBLEM_DATA_H		=$(PROG_DIR)/preprocessing/problem_data.h
PROBLEM_DATA_OBJ	=$(PROG_BIN)/preprocessing/problem_data.o

MODEL_SRC	=$(PROG_DIR)/solver/model.cpp
MODEL_H		=$(PROG_DIR)/solver/model.h
MODEL_OBJ	=$(PROG_BIN)/solver/model.o

FLOW_MODEL_SRC	=$(PROG_DIR)/solver/multi_flow_model.cpp
FLOW_MODEL_H	=$(PROG_DIR)/solver/multi_flow_model.h
FLOW_MODEL_OBJ	=$(PROG_BIN)/solver/multi_flow_model.o

EXPONENTIAL_MODEL_SRC	=$(PROG_DIR)/solver/exponential_model.cpp
EXPONENTIAL_MODEL_H		=$(PROG_DIR)/solver/exponential_model.h
EXPONENTIAL_MODEL_OBJ	=$(PROG_BIN)/solver/exponential_model.o

SOLVER_SRC	=$(PROG_DIR)/solver/solver.cpp
SOLVER_H	=$(PROG_DIR)/solver/solver.h
SOLVER_OBJ	=$(PROG_BIN)/solver/solver.o

MF_SOLVER_SRC	=$(PROG_DIR)/solver/MFSolver.cpp
MF_SOLVER_H		=$(PROG_DIR)/solver/MFSolver.h
MF_SOLVER_OBJ	=$(PROG_BIN)/solver/MFSolver.o

BC_SOLVER_SRC	=$(PROG_DIR)/solver/BCSolver.cpp
BC_SOLVER_H		=$(PROG_DIR)/solver/BCSolver.h
BC_SOLVER_OBJ	=$(PROG_BIN)/solver/BCSolver.o

SOLVER_PARAMS_H		=$(PROG_DIR)/solver/solver_params.h
SOLVER_PARAMS_OBJ	=$(PROG_BIN)/solver/solver_params.o

PI_INEQUALITY_H		=$(PROG_DIR)/solver/callbacks/pi_inequality.h
PI_INEQUALITY_OBJ	=$(PROG_BIN)/solver/callbacks/pi_inequality.o

PI_SIGMA_INEQUALITY_H	=$(PROG_DIR)/solver/callbacks/pi_sigma_inequality.h
PI_SIGMA_INEQUALITY_OBJ	=$(PROG_BIN)/solver/callbacks/pi_sigma_inequality.o

PREC_INEQUALITY_H	=$(PROG_DIR)/solver/callbacks/precedence_inequality.h
PREC_INEQUALITY_OBJ	=$(PROG_BIN)/solver/callbacks/precedence_inequality.o

REACHES_INEQUALITY_H	=$(PROG_DIR)/solver/callbacks/reachabibilty.h
REACHES_INEQUALITY_OBJ	=$(PROG_BIN)/solver/callbacks/reachabibilty.o

SIGMA_INEQUALITY_H		=$(PROG_DIR)/solver/callbacks/sigma_inequality.h
SIGMA_INEQUALITY_OBJ	=$(PROG_BIN)/solver/callbacks/sigma_inequality.o

UTILS_CALLBACKS_H	=$(PROG_DIR)/utils/callbacks.h
UTILS_CALLBACKS_OBJ	=$(PROG_BIN)/utils/callbacks.o

UTILS_PREPROCESSING_H	=$(PROG_DIR)/utils/preprocessing.h
UTILS_PREPROCESSING_OBJ	=$(PROG_BIN)/utils/preprocessing.o

# MAIN_HEURISTIC_SRC=$(PROG_DIR)/heuristic/main.cpp
# GRAPH_ALGO_SRC=$(PROG_DIR)/graph_algorithms.cpp
# GRAPH_ALGHO_H=$(PROG_DIR)/graph_alhorithms.h
# GRAPH_ALGO_OBJ=$(PROG_BIN)/graph_algorithms.o

# GENERAL_SRC=$(PROG_DIR)/general.cpp
# GENERAL_H=$(PROG_DIR)/general.h
# GENERAL_OBJ=$(PROG_BIN)/general.o

# USERCUT_SRC=$(PROG_DIR)/user_cut.cpp
# USERCUT_H=$(PROG_DIR)/user_cut.h
# USERCUT_OBJ=$(PROG_BIN)/user_cut.o

# TIMER_SRC=$(PROG_DIR)/timer.cpp
# TIMER_H=$(PROG_DIR)/timer.h
# TIMER_OBJ=$(PROG_BIN)/timer.o

# FEASIBILITY_PUMP_SRC=$(PROG_DIR)/feasibility_pump.cpp
# FEASIBILITY_PUMP_H=$(PROG_DIR)/feasibility_pump.h
# FEASIBILITY_PUMP_OBJ=$(PROG_BIN)/feasibility_pump.o

# LOCAL_BRANCHING_SRC=$(PROG_DIR)/local_branching.cpp
# LOCAL_BRANCHING_H=$(PROG_DIR)/local_branching.h
# LOCAL_BRANCHING_OBJ=$(PROG_BIN)/local_branching.o

# ALNS_SRC=$(PROG_DIR)/ALNS.cpp
# ALNS_H=$(PROG_DIR)/ALNS.h
# ALNS_OBJ=$(PROG_BIN)/ALNS.o

# HEURISTIC_SOLUTION_SRC=$(PROG_DIR)/heuristic_solution.cpp
# HEURISTIC_SOLUTION_H=$(PROG_DIR)/heuristic_solution.h
# HEURISTIC_SOLUTION_OBJ=$(PROG_BIN)/heuristic_solution.o

# ROUTE_SRC=$(PROG_DIR)/route.cpp
# ROUTE_H=$(PROG_DIR)/route.h
# ROUTE_OBJ=$(PROG_BIN)/route.o

# SOLUTION_HPP=$(PROG_DIR)/solution.hpp
# SOLUTION_OBJ=$(PROG_BIN)/solution.o

# MATRIX_HPP=$(PROG_DIR)/matrix.hpp
# MATRIX_OBJ=$(PROG_BIN)/matrix.o

# INSTANCE_SRC=$(PROG_DIR)/instance.cpp
# INSTANCE_H=$(PROG_DIR)/instance.h
# INSTANCE_OBJ=$(PROG_BIN)/instance.o

# FORM1_SRC=$(PROG_DIR)/CommodityFormulationsForm.cpp
# FORM1_H=$(PROG_DIR)/CommodityFormulationsForm.h
# FORM1_OBJ=$(PROG_BIN)/CommodityFormulationsForm.o



ELEMENTARY_OBJ: $(ELEMENTARY_H)
	$(CC) $(CFLAGS) -c $(ELEMENTARY_H) -o $(ELEMENTARY_OBJ)

GRAPH_OBJ: $(GRAPH_H)
	$(CC) $(CFLAGS) -c $(GRAPH_H) -o $(GRAPH_OBJ)

INSTANCE_OBJ: $(INSTANCE_H)
	$(CC) $(CFLAGS) -c $(INSTANCE_H) -o $(INSTANCE_OBJ)

SOLUTION_OBJ: $(SOLUTION_SRC) $(SOLUTION_H)
	$(CC) $(CFLAGS) -c $(SOLUTION_SRC) -o $(SOLUTION_OBJ)

HEURISTIC_OBJ: $(HEURISTIC_SRC) $(HEURISTIC_H)
	$(CC) $(CFLAGS) -c $(HEURISTIC_SRC) -o $(HEURISTIC_OBJ)

INSTANCE_GENERATOR_OBJ: $(INSTANCE_GENERATOR_SRC) $(INSTANCE_GENERATOR_H)
	$(CC) $(CFLAGS) -c $(INSTANCE_GENERATOR_SRC) -o $(INSTANCE_GENERATOR_OBJ)

READER_OBJ: $(READER_SRC) $(READER_H)
	$(CC) $(CFLAGS) -c $(READER_SRC) -o $(READER_OBJ)

PROBLEM_DATA_OBJ: $(PROBLEM_DATA_H)
	$(CC) $(CFLAGS) $(CFLAGS2) -c $(PROBLEM_DATA_H) -o $(PROBLEM_DATA_OBJ)

FLOW_OBJ: $(FLOW_SRC) $(FLOW_H)
	$(CC) $(CFLAGS) -c $(FLOW_SRC) -o $(FLOW_OBJ)

MODEL_OBJ: $(FLOW_MODEL_SRC) $(FLOW_MODEL_H)
	$(CC) $(CFLAGS) $(CFLAGS2) -c $(FLOW_MODEL_SRC) -o $(MODEL_OBJ)

EXPONENTIAL_MODEL_OBJ: $(EXPONENTIAL_MODEL_SRC) $(EXPONENTIAL_MODEL_H)
	$(CC) $(CFLAGS) -c $(EXPONENTIAL_MODEL_SRC) -o $(EXPONENTIAL_MODEL_OBJ)

SOLVER_OBJ: $(SOLVER_SRC) $(SOLVER_H)
	$(CC) $(CFLAGS) -c $(SOLVER_SRC) -o $(SOLVER_OBJ)

MF_SOLVER_OBJ: $(MF_SOLVER_SRC) $(MF_SOLVER_H)
	$(CC) $(CFLAGS) -c $(MF_SOLVER_SRC) -o $(MF_SOLVER_OBJ)

BC_SOLVER_OBJ: $(BC_SOLVER_H)
	$(CC) $(CFLAGS) -c $(BC_SOLVER_SRC) -o $(BC_SOLVER_OBJ)

SOLVER_PARAMS_OBJ: $(SOLVER_PARAMS_H)
	$(CC) $(CFLAGS) -c $(SOLVER_PARAMS_H) -o $(SOLVER_PARAMS_OBJ)

PI_INEQUALITY_OBJ: $(PI_INEQUALITY_H)
	$(CC) $(CFLAGS) -c $(PI_INEQUALITY_H) -o $(PI_INEQUALITY_OBJ)

PI_SIGMA_INEQUALITY_OBJ: $(PI_SIGMA_INEQUALITY_H)
	$(CC) $(CFLAGS) -c $(PI_SIGMA_INEQUALITY_H) -o $(PI_SIGMA_INEQUALITY_OBJ)

PREC_INEQUALITY_OBJ: $(PREC_INEQUALITY_H)
	$(CC) $(CFLAGS) -c $(PREC_INEQUALITY_H) -o $(PREC_INEQUALITY_OBJ)

REACHES_INEQUALITY_OBJ: $(REACHES_INEQUALITY_H)
	$(CC) $(CFLAGS) -c $(REACHES_INEQUALITY_H) -o $(REACHES_INEQUALITY_OBJ)

SIGMA_INEQUALITY_OBJ: $(SIGMA_INEQUALITY_H)
	$(CC) $(CFLAGS) -c $(SIGMA_INEQUALITY_H) -o $(SIGMA_INEQUALITY_OBJ)

UTILS_CALLBACKS_OBJ: $(UTILS_CALLBACKS_H)
	$(CC) $(CFLAGS) -c $(UTILS_CALLBACKS_H) -o $(UTILS_CALLBACKS_OBJ)

UTILS_PREPROCESSING_OBJ: $(UTILS_PREPROCESSING_H)
	$(CC) $(CFLAGS) -c $(UTILS_PREPROCESSING_H) -o $(UTILS_PREPROCESSING_OBJ)

ajns: ELEMENTARY_OBJ GRAPH_OBJ INSTANCE_OBJ SOLUTION_OBJ HEURISTIC_OBJ INSTANCE_GENERATOR_OBJ READER_OBJ PROBLEM_DATA_OBJ FLOW_OBJ MODEL_OBJ EXPONENTIAL_MODEL_OBJ SOLVER_OBJ MF_SOLVER_OBJ BC_SOLVER_OBJ SOLVER_PARAMS_OBJ PI_INEQUALITY_OBJ PI_SIGMA_INEQUALITY_OBJ PREC_INEQUALITY_OBJ REACHES_INEQUALITY_OBJ SIGMA_INEQUALITY_OBJ UTILS_CALLBACKS_OBJ UTILS_PREPROCESSING_OBJ 
	$(CC) $(CFLAGS) $(CFLAGS2) $(ELEMENTARY_SRC) $(GRAPH_H) $(INSTANCE_H) $(SOLUTION_SRC) $(HEURISTIC_SRC) $(INSTANCE_GENERATOR_SRC) $(READER_SRC) $(PROBLEM_DATA_H) $(FLOW_SRC) $(MODEL_SRC) $(EXPONENTIAL_MODEL_SRC) $(SOLVER_SRC) $(MF_SOLVER_SRC) $(BC_SOLVER_SRC) $(SOLVER_PARAMS_H) $(PI_INEQUALITY_H) $(PI_SIGMA_INEQUALITY_H) $(PREC_INEQUALITY_H) $(REACHES_INEQUALITY_H) $(SIGMA_INEQUALITY_H) $(UTILS_CALLBACKS_H) $(UTILS_PREPROCESSING_H) $(MAIN_SRC) -o ajns $(CLNFLAGS)

stop1: ARC_OBJ GRAPH_OBJ GRAPH_ALGO_OBJ GENERAL_OBJ HEURISTIC_SOLUTION_OBJ ROUTE_OBJ MATRIX_OBJ TIMER_OBJ ALNS_OBJ FEASIBILITY_PUMP_OBJ LOCAL_BRANCHING_OBJ SOLUTION_OBJ INSTANCE_OBJ FORM1_OBJ
	$(CC) $(CFLAGS) $(CFLAGS2) $(ARC_SRC) $(GRAPH_SRC) $(GRAPH_ALGO_SRC) $(GENERAL_SRC) $(USERCUT_SRC) $(HEURISTIC_SOLUTION_SRC) $(ROUTE_SRC) $(MATRIX_HPP) $(INSTANCE_SRC) $(TIMER_SRC) $(ALNS_SRC) $(FEASIBILITY_PUMP_SRC) $(LOCAL_BRANCHING_SRC) $(SOLUTION_HPP) $(FORM1_SRC) $(MAIN_EXACT_SRC) -o stop1 $(CLNFLAGS)

stop2: ARC_OBJ GRAPH_OBJ GRAPH_ALGO_OBJ GENERAL_OBJ HEURISTIC_SOLUTION_OBJ ROUTE_OBJ MATRIX_OBJ TIMER_OBJ ALNS_OBJ FEASIBILITY_PUMP_OBJ LOCAL_BRANCHING_OBJ SOLUTION_OBJ INSTANCE_OBJ FORM1_OBJ
	$(CC) $(CFLAGS) $(CFLAGS2) $(ARC_SRC) $(GRAPH_SRC) $(GRAPH_ALGO_SRC) $(GENERAL_SRC) $(USERCUT_SRC) $(HEURISTIC_SOLUTION_SRC) $(ROUTE_SRC) $(MATRIX_HPP) $(INSTANCE_SRC) $(TIMER_SRC) $(ALNS_SRC) $(FEASIBILITY_PUMP_SRC) $(LOCAL_BRANCHING_SRC) $(SOLUTION_HPP) $(FORM1_SRC) $(MAIN_HEURISTIC_SRC) -o stop2 $(CLNFLAGS)

stop3: ARC_OBJ GRAPH_OBJ GRAPH_ALGO_OBJ GENERAL_OBJ HEURISTIC_SOLUTION_OBJ ROUTE_OBJ MATRIX_OBJ TIMER_OBJ ALNS_OBJ FEASIBILITY_PUMP_OBJ LOCAL_BRANCHING_OBJ SOLUTION_OBJ INSTANCE_OBJ FORM1_OBJ
	$(CC) $(CFLAGS) $(CFLAGS2) $(ARC_SRC) $(GRAPH_SRC) $(GRAPH_ALGO_SRC) $(GENERAL_SRC) $(USERCUT_SRC) $(HEURISTIC_SOLUTION_SRC) $(ROUTE_SRC) $(MATRIX_HPP) $(INSTANCE_SRC) $(TIMER_SRC) $(ALNS_SRC) $(FEASIBILITY_PUMP_SRC) $(LOCAL_BRANCHING_SRC) $(SOLUTION_HPP) $(FORM1_SRC) $(MAIN_HEURISTIC_SRC) -o stop3 $(CLNFLAGS)

stop4: ARC_OBJ GRAPH_OBJ GRAPH_ALGO_OBJ GENERAL_OBJ HEURISTIC_SOLUTION_OBJ ROUTE_OBJ MATRIX_OBJ TIMER_OBJ ALNS_OBJ FEASIBILITY_PUMP_OBJ LOCAL_BRANCHING_OBJ SOLUTION_OBJ INSTANCE_OBJ FORM1_OBJ
	$(CC) $(CFLAGS) $(CFLAGS2) $(ARC_SRC) $(GRAPH_SRC) $(GRAPH_ALGO_SRC) $(GENERAL_SRC) $(USERCUT_SRC) $(HEURISTIC_SOLUTION_SRC) $(ROUTE_SRC) $(MATRIX_HPP) $(INSTANCE_SRC) $(TIMER_SRC) $(ALNS_SRC) $(FEASIBILITY_PUMP_SRC) $(LOCAL_BRANCHING_SRC) $(SOLUTION_HPP) $(FORM1_SRC) $(MAIN_HEURISTIC_SRC) -o stop4 $(CLNFLAGS)

clean:
	rm $(PROG_BIN)/*.o
